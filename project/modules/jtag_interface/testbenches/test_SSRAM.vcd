$date
	Mon Apr  7 21:33:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module semiDualPortSSRAM_tb $end
$var wire 32 ! dataOutB [31:0] $end
$var wire 32 " dataOutA [31:0] $end
$var parameter 32 # bitwidth $end
$var parameter 32 $ nrOfEntries $end
$var parameter 32 % readAfterWrite $end
$var reg 6 & addressA [5:0] $end
$var reg 6 ' addressB [5:0] $end
$var reg 1 ( clockA $end
$var reg 1 ) clockB $end
$var reg 32 * dataIn [31:0] $end
$var reg 1 + writeEnable $end
$scope module dut $end
$var wire 6 , addressA [5:0] $end
$var wire 6 - addressB [5:0] $end
$var wire 1 ( clockA $end
$var wire 1 ) clockB $end
$var wire 32 . dataIn [31:0] $end
$var wire 1 + writeEnable $end
$var parameter 32 / bitwidth $end
$var parameter 32 0 nrOfEntries $end
$var parameter 32 1 readAfterWrite $end
$var reg 32 2 dataOutA [31:0] $end
$var reg 32 3 dataOutB [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b0 1
b1000000 0
b100000 /
b0 %
b1000000 $
b100000 #
$end
#0
$dumpvars
bx 3
bx 2
b0 .
b0 -
b0 ,
0+
b0 *
0)
0(
b0 '
b0 &
bx "
bx !
$end
#2
1)
1(
#4
0)
0(
#6
1)
1(
#8
0)
0(
b11011110101011011011111011101111 *
b11011110101011011011111011101111 .
1+
#10
b11011110101011011011111011101111 !
b11011110101011011011111011101111 3
b11011110101011011011111011101111 "
b11011110101011011011111011101111 2
1)
1(
#12
0)
0(
0+
#14
1)
1(
#16
0)
0(
b11001010111111101011101010111110 *
b11001010111111101011101010111110 .
b1 &
b1 ,
1+
#18
b11001010111111101011101010111110 "
b11001010111111101011101010111110 2
1)
1(
#20
0)
0(
b1 '
b1 -
0+
#22
b11001010111111101011101010111110 !
b11001010111111101011101010111110 3
1)
1(
#24
0)
0(
