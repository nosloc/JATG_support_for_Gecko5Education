$date
	Sun Apr 27 16:17:42 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_top $end
$var wire 4 ! LEDS_colums [3:0] $end
$var wire 4 " rgbRow [3:0] $end
$var wire 10 # red [9:0] $end
$var wire 10 $ green [9:0] $end
$var wire 10 % blue [9:0] $end
$var wire 1 & TDO $end
$var wire 9 ' LEDS [8:0] $end
$var reg 1 ( TCK $end
$var reg 1 ) TDI $end
$var reg 1 * TMS $end
$scope module top $end
$var wire 1 ( TCK $end
$var wire 1 ) TDI $end
$var wire 1 & TDO $end
$var wire 1 * TMS $end
$var wire 4 + rgbRow [3:0] $end
$var wire 1 , s_JTDO2 $end
$var wire 1 - s_TDO $end
$var wire 1 . s_JUPDATE $end
$var wire 1 / s_JTDO1 $end
$var wire 1 0 s_JTDI $end
$var wire 1 1 s_JTCK $end
$var wire 1 2 s_JSHIFT $end
$var wire 1 3 s_JRTI2 $end
$var wire 1 4 s_JRTI1 $end
$var wire 1 5 s_JRSTN $end
$var wire 1 6 s_JCE2 $end
$var wire 1 7 s_JCE1 $end
$var wire 10 8 red [9:0] $end
$var wire 10 9 green [9:0] $end
$var wire 10 : blue [9:0] $end
$scope module JTAGG $end
$var wire 1 7 JCE1 $end
$var wire 1 6 JCE2 $end
$var wire 1 4 JRTI1 $end
$var wire 1 3 JRTI2 $end
$var wire 1 2 JSHIFT $end
$var wire 1 1 JTCK $end
$var wire 1 , JTDO2 $end
$var wire 1 . JUPDATE $end
$var wire 1 ( TCK $end
$var wire 1 ) TDI $end
$var wire 1 * TMS $end
$var wire 1 ; update_ir $end
$var wire 1 < update_dr $end
$var wire 1 = test_logic_reset $end
$var wire 1 > shift_ir $end
$var wire 1 ? shift_dr $end
$var wire 1 @ run_test_idle $end
$var wire 1 A capture_ir $end
$var wire 1 B capture_dr $end
$var wire 1 - TDO $end
$var wire 1 / JTDO1 $end
$var parameter 56 C ER1 $end
$var parameter 56 D ER2 $end
$var reg 1 5 JRSTN $end
$var reg 1 0 JTDI $end
$var reg 1 E drive_tdo $end
$var reg 8 F ir_shadow_reg [7:0] $end
$var reg 8 G ir_shift_reg [7:0] $end
$var reg 1 H tdo_reg $end
$scope module u_jtag_tap $end
$var wire 1 ( tck $end
$var wire 1 ) tdi $end
$var wire 1 * tms $end
$var wire 1 ; update_ir $end
$var wire 1 < update_dr $end
$var wire 1 = test_logic_reset $end
$var wire 1 > shift_ir $end
$var wire 1 ? shift_dr $end
$var wire 1 @ run_test_idle $end
$var wire 1 A capture_ir $end
$var wire 1 B capture_dr $end
$var parameter 32 I fsm_capture_dr $end
$var parameter 32 J fsm_capture_ir $end
$var parameter 32 K fsm_exit1_dr $end
$var parameter 32 L fsm_exit1_ir $end
$var parameter 32 M fsm_exit2_dr $end
$var parameter 32 N fsm_exit2_ir $end
$var parameter 32 O fsm_pause_dr $end
$var parameter 32 P fsm_pause_ir $end
$var parameter 32 Q fsm_run_test_idle $end
$var parameter 32 R fsm_select_dr_scan $end
$var parameter 32 S fsm_select_ir_scan $end
$var parameter 32 T fsm_shift_dr $end
$var parameter 32 U fsm_shift_ir $end
$var parameter 32 V fsm_test_logic_reset $end
$var parameter 32 W fsm_update_dr $end
$var parameter 32 X fsm_update_ir $end
$var reg 4 Y cur_jtag_state [3:0] $end
$var reg 160 Z cur_jtag_state_text [159:0] $end
$var reg 4 [ nxt_jtag_state [3:0] $end
$upscope $end
$upscope $end
$scope module jtag_support_inst $end
$var wire 1 7 JCE1 $end
$var wire 1 6 JCE2 $end
$var wire 1 5 JRSTN $end
$var wire 1 4 JRTI1 $end
$var wire 1 3 JRTI2 $end
$var wire 1 2 JSHIFT $end
$var wire 1 1 JTCK $end
$var wire 1 0 JTDI $end
$var wire 1 , JTDO2 $end
$var wire 1 . JUPDATE $end
$var wire 32 \ address_dataIN [31:0] $end
$var wire 1 ] busyIN $end
$var wire 1 ^ data_validIN $end
$var wire 1 _ end_transactionIN $end
$var wire 1 ` errorIN $end
$var wire 1 a granted $end
$var wire 4 b rgbRow [3:0] $end
$var wire 9 c s_pp_address_dma [8:0] $end
$var wire 6 d s_status_reg_out [5:0] $end
$var wire 1 e s_pp_writeEnable_ipcore $end
$var wire 1 f s_pp_writeEnable_dma $end
$var wire 1 g s_pp_switch_ipcore $end
$var wire 32 h s_pp_dataOut_ipcore [31:0] $end
$var wire 32 i s_pp_dataOut_dma [31:0] $end
$var wire 32 j s_pp_dataIn_ipcore [31:0] $end
$var wire 32 k s_pp_dataIn_dma [31:0] $end
$var wire 9 l s_pp_address_ipcore [8:0] $end
$var wire 1 m s_ipcore_switch_ready $end
$var wire 1 n s_dma_readReady $end
$var wire 1 o s_dma_data_ready $end
$var wire 4 p s_dma_byte_enable [3:0] $end
$var wire 32 q s_dma_address [31:0] $end
$var wire 1 r request $end
$var wire 10 s red [9:0] $end
$var wire 1 t read_n_writeOUT $end
$var wire 10 u green [9:0] $end
$var wire 1 v end_transactionOUT $end
$var wire 1 w data_validOUT $end
$var wire 4 x byte_enableOUT [3:0] $end
$var wire 1 y busyOUT $end
$var wire 8 z busrt_sizeOUT [7:0] $end
$var wire 10 { blue [9:0] $end
$var wire 1 | begin_transactionOUT $end
$var wire 32 } address_dataOUT [31:0] $end
$var wire 1 / JTDO1 $end
$scope module dma_inst $end
$var wire 32 ~ address_dataIN [31:0] $end
$var wire 9 !" bufferAddress [8:0] $end
$var wire 1 ] busyIN $end
$var wire 1 1 clock $end
$var wire 1 ^ data_validIN $end
$var wire 1 _ end_transactionIN $end
$var wire 1 ` errorIN $end
$var wire 1 a granted $end
$var wire 1 5 reset $end
$var wire 1 "" s_reading_from_buffer_done $end
$var wire 1 f writeEnable $end
$var wire 1 r request $end
$var wire 1 t read_n_writeOUT $end
$var wire 1 m ipcore_switch_ready $end
$var wire 1 n ipcore_readReady $end
$var wire 1 o ipcore_dataReady $end
$var wire 4 #" ipcore_byteEnable [3:0] $end
$var wire 32 $" ipcore_address_to_read [31:0] $end
$var wire 1 v end_transactionOUT $end
$var wire 1 w data_validOUT $end
$var wire 32 %" dataOut [31:0] $end
$var wire 32 &" dataIn [31:0] $end
$var wire 4 '" byte_enableOUT [3:0] $end
$var wire 1 y busyOUT $end
$var wire 8 (" busrt_sizeOUT [7:0] $end
$var wire 1 | begin_transactionOUT $end
$var wire 32 )" address_dataOUT [31:0] $end
$var parameter 32 *" Base $end
$var parameter 32 +" fsm_asking_for_buffer $end
$var parameter 32 ," fsm_end_transaction $end
$var parameter 32 -" fsm_idle $end
$var parameter 32 ." fsm_read_request $end
$var parameter 32 /" fsm_read_sending_handshake $end
$var parameter 32 0" fsm_reading_data $end
$var parameter 32 1" fsm_reading_from_buffer $end
$var parameter 32 2" fsm_sending_data $end
$var parameter 32 3" fsm_write_request $end
$var parameter 32 4" fsm_write_sending_handshake $end
$var parameter 32 5" fsm_writting_buffer $end
$var reg 32 6" buffer_data [31:0] $end
$var reg 4 7" cur_state [3:0] $end
$var reg 4 8" nxt_state [3:0] $end
$var reg 32 9" s_address [31:0] $end
$var reg 4 :" s_byte_enable [3:0] $end
$upscope $end
$scope module ipcore $end
$var wire 1 7 JCE1 $end
$var wire 1 6 JCE2 $end
$var wire 1 5 JRSTN $end
$var wire 1 4 JRTI1 $end
$var wire 1 3 JRTI2 $end
$var wire 1 2 JSHIFT $end
$var wire 1 1 JTCK $end
$var wire 1 , JTD2 $end
$var wire 1 0 JTDI $end
$var wire 1 . JUPDATE $end
$var wire 1 m switch_ready $end
$var wire 6 ;" s_status_reg_out [5:0] $end
$var wire 1 <" s_JTDI_2 $end
$var wire 1 =" s_JTDI_1 $end
$var wire 1 e pp_writeEnable $end
$var wire 1 g pp_switch $end
$var wire 32 >" pp_dataOut [31:0] $end
$var wire 32 ?" pp_dataIn [31:0] $end
$var wire 9 @" pp_address [8:0] $end
$var wire 1 n dma_readReady $end
$var wire 1 o dma_data_ready $end
$var wire 4 A" dma_byte_enable [3:0] $end
$var wire 32 B" dma_address [31:0] $end
$var wire 1 / JTD1 $end
$scope module instruction_chain1 $end
$var wire 1 7 JCE1 $end
$var wire 1 5 JRSTN $end
$var wire 1 4 JRTI1 $end
$var wire 1 2 JSHIFT $end
$var wire 1 1 JTCK $end
$var wire 1 =" JTDI $end
$var wire 1 . JUPDATE $end
$var wire 1 C" s_ready_to_switch $end
$var wire 6 D" status_reg_out [5:0] $end
$var wire 1 m switch_ready $end
$var wire 1 e pp_writeEnable $end
$var wire 1 g pp_switch $end
$var wire 32 E" pp_dataOut [31:0] $end
$var wire 32 F" pp_dataIn [31:0] $end
$var wire 9 G" pp_address [8:0] $end
$var wire 1 H" is_operation_running $end
$var wire 1 n dma_readReady $end
$var wire 1 o dma_data_ready $end
$var wire 4 I" dma_byte_enable [3:0] $end
$var wire 32 J" dma_address [31:0] $end
$var wire 1 / JTD1 $end
$var parameter 32 K" IDLE $end
$var parameter 32 L" read_ASK_BUFFER $end
$var parameter 32 M" read_DATA_READY_TO_READ $end
$var parameter 32 N" read_LAUNCH_READ $end
$var parameter 32 O" read_STORE_BUFFER_ANSWER $end
$var parameter 32 P" read_SWITCH_BUFFER $end
$var parameter 32 Q" read_WAIT_FOR_SWITCH $end
$var parameter 32 R" write_FILL_BUFFER $end
$var parameter 32 S" write_LAUNCH_WRITE $end
$var parameter 32 T" write_SWITCH_BUFFER $end
$var parameter 32 U" write_WAIT_FOR_SWITCH $end
$var reg 32 V" address_reg [31:0] $end
$var reg 8 W" busrt_size_reg [7:0] $end
$var reg 4 X" byte_enable_reg [3:0] $end
$var reg 5 Y" chain1_cur_state [4:0] $end
$var reg 5 Z" chain1_nxt_state [4:0] $end
$var reg 32 [" data_reg [31:0] $end
$var reg 8 \" pp_address_reg [7:0] $end
$var reg 1 ]" r_data_shifted_in $end
$var reg 1 ^" r_data_shifted_out $end
$var reg 1 _" r_launch_read $end
$var reg 32 `" read_data_from_buffer [31:0] $end
$var reg 8 a" remaining_size_reg [7:0] $end
$var reg 36 b" shift_reg [35:0] $end
$var reg 6 c" status_reg [5:0] $end
$upscope $end
$upscope $end
$scope module pingpongbuffer_inst $end
$var wire 9 d" addressA [8:0] $end
$var wire 9 e" addressB [8:0] $end
$var wire 1 1 clock $end
$var wire 32 f" dataInA [31:0] $end
$var wire 32 g" dataInB [31:0] $end
$var wire 1 5 reset $end
$var wire 1 g switch $end
$var wire 1 e writeEnableA $end
$var wire 1 f writeEnableB $end
$var wire 9 h" s_addressB [8:0] $end
$var wire 9 i" s_addressA [8:0] $end
$var wire 32 j" dataOutB [31:0] $end
$var wire 32 k" dataOutA [31:0] $end
$var reg 1 l" switch_reg $end
$scope module ssram $end
$var wire 9 m" addressA [8:0] $end
$var wire 9 n" addressB [8:0] $end
$var wire 1 1 clockA $end
$var wire 1 1 clockB $end
$var wire 32 o" dataInA [31:0] $end
$var wire 32 p" dataInB [31:0] $end
$var wire 1 e writeEnableA $end
$var wire 1 f writeEnableB $end
$var reg 32 q" dataOutA [31:0] $end
$var reg 32 r" dataOutB [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope task write_DR $end
$var reg 36 s" dr [35:0] $end
$var integer 32 t" i [31:0] $end
$upscope $end
$scope task write_IR $end
$var reg 8 u" ir [7:0] $end
$var integer 32 v" i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 U"
b11 T"
b100 S"
b1 R"
b110 Q"
b1000 P"
b1010 O"
b101 N"
b111 M"
b1001 L"
b0 K"
b1010 5"
b10 4"
b1 3"
b11 2"
b101 1"
b1001 0"
b1000 /"
b111 ."
b0 -"
b100 ,"
b110 +"
b1000000000000000000000000000000 *"
b1111 X
b1000 W
b0 V
b1011 U
b100 T
b1001 S
b10 R
b1 Q
b1101 P
b110 O
b1110 N
b111 M
b1100 L
b101 K
b1010 J
b11 I
b1000101010011100100000101000010010011000100010101000100 D
b1000101010011100100000101000010010011000100010101000100 C
$end
#0
$dumpvars
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
b0 p"
b0 o"
b100000000 n"
b0 m"
0l"
bx k"
bx j"
b0 i"
b100000000 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
0_"
0^"
0]"
b0 \"
bx ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 J"
b0 I"
0H"
b0 G"
b0 F"
bx E"
b0 D"
1C"
b0 B"
b0 A"
b0 @"
b0 ?"
bx >"
z="
z<"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 )"
b0 ("
b0 '"
b0 &"
bx %"
b0 $"
b0 #"
1""
b0 !"
b0 ~
b0 }
0|
b111111111 {
b0 z
0y
b0 x
0w
0v
b111111111 u
0t
b111111111 s
0r
b0 q
b0 p
0o
0n
1m
b0 l
b0 k
b0 j
bx i
bx h
0g
0f
0e
b0 d
b0 c
b0 b
0a
0`
0_
0^
0]
b0 \
b0 [
b1110100011001010111001101110100010111110110110001101111011001110110100101100011010111110111001001100101011100110110010101110100 Z
b0 Y
xH
b0 G
b0 F
0E
0B
0A
0@
0?
0>
1=
0<
0;
b111111111 :
b111111111 9
b111111111 8
07
06
05
04
03
02
01
x0
0/
0.
z-
z,
b0 +
1*
0)
0(
b111111111 '
0&
b111111111 %
b111111111 $
b111111111 #
b0 "
b0 !
$end
#2
00
11
1(
#4
01
0(
#6
11
1(
#8
01
0(
#10
11
1(
#12
01
0(
#14
11
1(
#16
01
0(
#18
11
1(
#20
b1 [
01
0(
0*
#22
b1110010011101010110111001011111011101000110010101110011011101000101111101101001011001000110110001100101 Z
0=
1@
b1 Y
11
1(
#24
15
01
0(
#26
11
1(
#28
b10 [
01
0(
1*
b110010 u"
#30
b111001101100101011011000110010101100011011101000101111101100100011100100101111101110011011000110110000101101110 Z
b1001 [
0@
b10 Y
11
1(
#32
01
0(
#34
b111001101100101011011000110010101100011011101000101111101101001011100100101111101110011011000110110000101101110 Z
b0 [
b1001 Y
11
1(
#36
b1010 [
01
0(
0*
#38
b1100011011000010111000001110100011101010111001001100101010111110110100101110010 Z
b1011 [
1A
b1010 Y
11
1(
#40
01
0(
b0 v"
#42
b111001101101000011010010110011001110100010111110110100101110010 Z
0A
1>
b1011 Y
11
1(
#44
0-
0H
1E
01
0(
1)
b1 v"
#46
10
b10000000 G
11
1(
#48
01
0(
0)
b10 v"
#50
00
b1000000 G
11
1(
#52
01
0(
b11 v"
#54
b100000 G
11
1(
#56
01
0(
1)
b100 v"
#58
10
b10010000 G
11
1(
#60
01
0(
b101 v"
#62
b11001000 G
11
1(
#64
01
0(
0)
b110 v"
#66
00
b1100100 G
11
1(
#68
b1100 [
01
0(
1*
b1000 v"
#70
b110010101111000011010010111010000110001010111110110100101110010 Z
b1111 [
0>
b1100 Y
b110010 G
11
1(
#72
z-
0E
01
0(
#74
b11101010111000001100100011000010111010001100101010111110110100101110010 Z
b10 [
1;
b1111 Y
11
1(
#76
b1 [
01
0(
0*
#78
14
b1110010011101010110111001011111011101000110010101110011011101000101111101101001011001000110110001100101 Z
1@
0;
b1 Y
b110010 F
11
1(
#80
01
0(
#82
11
1(
#84
b10 [
01
0(
1*
b11111110001 s"
#86
04
b111001101100101011011000110010101100011011101000101111101100100011100100101111101110011011000110110000101101110 Z
b1001 [
0@
b10 Y
11
1(
#88
b11 [
01
0(
0*
#90
0="
17
b1100011011000010111000001110100011101010111001001100101010111110110010001110010 Z
b100 [
1B
b11 Y
11
1(
#92
01
0(
1)
b0 t"
#94
12
1="
b111001101101000011010010110011001110100010111110110010001110010 Z
0B
1?
10
b100 Y
11
1(
#96
0-
1E
01
0(
0)
b1 t"
#98
0="
b100000000000000000000000000000000000 b"
00
11
1(
#100
01
0(
b10 t"
#102
b10000000000000000000000000000000000 b"
11
1(
#104
01
0(
b11 t"
#106
b1000000000000000000000000000000000 b"
11
1(
#108
01
0(
1)
b100 t"
#110
1="
b100000000000000000000000000000000 b"
10
11
1(
#112
01
0(
b101 t"
#114
b100010000000000000000000000000000000 b"
11
1(
#116
01
0(
b110 t"
#118
b110001000000000000000000000000000000 b"
11
1(
#120
01
0(
b111 t"
#122
b111000100000000000000000000000000000 b"
11
1(
#124
01
0(
b1000 t"
#126
b111100010000000000000000000000000000 b"
11
1(
#128
01
0(
b1001 t"
#130
b111110001000000000000000000000000000 b"
11
1(
#132
01
0(
b1010 t"
#134
b111111000100000000000000000000000000 b"
11
1(
#136
01
0(
0)
b1011 t"
#138
0="
b111111100010000000000000000000000000 b"
00
11
1(
#140
01
0(
b1100 t"
#142
b11111110001000000000000000000000000 b"
11
1(
#144
01
0(
b1101 t"
#146
b1111111000100000000000000000000000 b"
11
1(
#148
01
0(
b1110 t"
#150
b111111100010000000000000000000000 b"
11
1(
#152
01
0(
b1111 t"
#154
b11111110001000000000000000000000 b"
11
1(
#156
01
0(
b10000 t"
#158
b1111111000100000000000000000000 b"
11
1(
#160
01
0(
b10001 t"
#162
b111111100010000000000000000000 b"
11
1(
#164
01
0(
b10010 t"
#166
b11111110001000000000000000000 b"
11
1(
#168
01
0(
b10011 t"
#170
b1111111000100000000000000000 b"
11
1(
#172
01
0(
b10100 t"
#174
b111111100010000000000000000 b"
11
1(
#176
01
0(
b10101 t"
#178
b11111110001000000000000000 b"
11
1(
#180
01
0(
b10110 t"
#182
b1111111000100000000000000 b"
11
1(
#184
01
0(
b10111 t"
#186
b111111100010000000000000 b"
11
1(
#188
01
0(
b11000 t"
#190
b11111110001000000000000 b"
11
1(
#192
01
0(
b11001 t"
#194
b1111111000100000000000 b"
11
1(
#196
01
0(
b11010 t"
#198
b111111100010000000000 b"
11
1(
#200
01
0(
b11011 t"
#202
b11111110001000000000 b"
11
1(
#204
01
0(
b11100 t"
#206
b1111111000100000000 b"
11
1(
#208
01
0(
b11101 t"
#210
b111111100010000000 b"
11
1(
#212
01
0(
b11110 t"
#214
b11111110001000000 b"
11
1(
#216
01
0(
b11111 t"
#218
b1111111000100000 b"
11
1(
#220
01
0(
b100000 t"
#222
b111111100010000 b"
11
1(
#224
01
0(
b100001 t"
#226
b11111110001000 b"
11
1(
#228
01
0(
b100010 t"
#230
b1111111000100 b"
11
1(
#232
01
0(
b100011 t"
#234
b111111100010 b"
11
1(
#236
b101 [
01
0(
1*
b100100 t"
#238
z="
07
02
1&
1/
b110010101111000011010010111010000110001010111110110010001110010 Z
b1000 [
0?
b11111110001 b"
b101 Y
11
1(
#240
z-
0E
01
0(
#242
1.
b11101010111000001100100011000010111010001100101010111110110010001110010 Z
b10 [
1<
b1000 Y
11
1(
#244
b1 [
01
0(
0*
#246
b111111110 '
b111111110 $
b111111110 9
b111111110 u
b111111110 %
b111111110 :
b111111110 {
b111111110 #
b111111110 8
b111111110 s
14
0.
b1110010011101010110111001011111011101000110010101110011011101000101111101101001011001000110110001100101 Z
1@
0<
b1 d
b1 ;"
b1 D"
b1 c"
b1111111 V"
b1 Y
11
1(
#248
01
0(
#250
11
1(
#252
01
0(
#254
11
1(
#256
01
0(
#258
11
1(
#260
b10 [
01
0(
1*
b0 s"
#262
04
b111001101100101011011000110010101100011011101000101111101100100011100100101111101110011011000110110000101101110 Z
b1001 [
0@
b10 Y
11
1(
#264
b11 [
01
0(
0*
#266
0="
17
b1100011011000010111000001110100011101010111001001100101010111110110010001110010 Z
b100 [
1B
b11 Y
11
1(
#268
01
0(
b0 t"
#270
12
b111001101101000011010010110011001110100010111110110010001110010 Z
0B
1?
b1 b"
b100 Y
11
1(
#272
1-
1H
1E
01
0(
b1 t"
#274
0&
0/
b0 b"
11
1(
#276
0-
0H
01
0(
b10 t"
#278
11
1(
#280
01
0(
b11 t"
#282
11
1(
#284
01
0(
b100 t"
#286
11
1(
#288
01
0(
b101 t"
#290
11
1(
#292
01
0(
b110 t"
#294
11
1(
#296
01
0(
b111 t"
#298
11
1(
#300
01
0(
b1000 t"
#302
11
1(
#304
01
0(
b1001 t"
#306
11
1(
#308
01
0(
b1010 t"
#310
11
1(
#312
01
0(
b1011 t"
#314
11
1(
#316
01
0(
b1100 t"
#318
11
1(
#320
01
0(
b1101 t"
#322
11
1(
#324
01
0(
b1110 t"
#326
11
1(
#328
01
0(
b1111 t"
#330
11
1(
#332
01
0(
b10000 t"
#334
11
1(
#336
01
0(
b10001 t"
#338
11
1(
#340
01
0(
b10010 t"
#342
11
1(
#344
01
0(
b10011 t"
#346
11
1(
#348
01
0(
b10100 t"
#350
11
1(
#352
01
0(
b10101 t"
#354
11
1(
#356
01
0(
b10110 t"
#358
11
1(
#360
01
0(
b10111 t"
#362
11
1(
#364
01
0(
b11000 t"
#366
11
1(
#368
01
0(
b11001 t"
#370
11
1(
#372
01
0(
b11010 t"
#374
11
1(
#376
01
0(
b11011 t"
#378
11
1(
#380
01
0(
b11100 t"
#382
11
1(
#384
01
0(
b11101 t"
#386
11
1(
#388
01
0(
b11110 t"
#390
11
1(
#392
01
0(
b11111 t"
#394
11
1(
#396
01
0(
b100000 t"
#398
11
1(
#400
01
0(
b100001 t"
#402
11
1(
#404
01
0(
b100010 t"
#406
11
1(
#408
01
0(
b100011 t"
#410
11
1(
#412
b101 [
01
0(
1*
b100100 t"
#414
z="
07
02
b110010101111000011010010111010000110001010111110110010001110010 Z
b1000 [
0?
b101 Y
11
1(
#416
z-
0E
01
0(
#418
1.
b11101010111000001100100011000010111010001100101010111110110010001110010 Z
b10 [
1<
b1000 Y
11
1(
#420
b1 [
01
0(
0*
#422
14
0.
b1110010011101010110111001011111011101000110010101110011011101000101111101101001011001000110110001100101 Z
1@
0<
b1 Y
11
1(
#424
01
0(
